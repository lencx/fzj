{"id":"D_kwDOEUMBcs4ANqol","title":"滚动进度条","bodyHTML":"<blockquote>\n<p dir=\"auto\">学习框架语言，写代码是最快的入门方式。为了给基于 <code class=\"notranslate\">vitepress</code> 构建的 Blog 新增功能，现学 <code class=\"notranslate\">Vue3</code>，诞生了下面的进度条组件。</p>\n</blockquote>\n<p dir=\"auto\"><a href=\"https://code.lencx.tech/\" rel=\"nofollow\">体验地址</a> - 手写 Code Snippets 系列</p>\n<p dir=\"auto\">创建一个进度条，用来指示页面滚动百分比，主要有两点注意事项及一个思考：</p>\n<ul dir=\"auto\">\n<li>使用 <code class=\"notranslate\">position: fixed</code> 将滚动进度条置于页面顶部，<code class=\"notranslate\">z-index</code> 设置一个较大的值是为了保证元素在页面内容的最上层。</li>\n<li>使用 <code class=\"notranslate\">EventTarget.addEventListener</code> 和 <code class=\"notranslate\">Element.scrollTop</code> 来确定文档的滚动百分比并将其设置为滚动进度条的宽度。</li>\n<li>思考 - 如果页面容器高度发生变化，会发生什么？</li>\n</ul>\n<h2 dir=\"auto\">💠 核心</h2>\n<div class=\"highlight highlight-text-html-basic notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;div id=&quot;scroll_progress_bar&quot;&gt;&lt;/div&gt;\"><pre class=\"notranslate\"><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">div</span> <span class=\"pl-c1\">id</span>=\"<span class=\"pl-s\">scroll_progress_bar</span>\"<span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span></pre></div>\n<div class=\"highlight highlight-source-css notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"#scroll_progress_bar {\n  position: fixed;\n  top: 0;\n  width: 0%;\n  height: 4px;\n  background: #7983ff;\n  z-index: 10000;\n}\"><pre class=\"notranslate\"><span class=\"pl-kos\">#</span><span class=\"pl-c1\">scroll_progress_bar</span> {\n  <span class=\"pl-c1\">position</span><span class=\"pl-kos\">:</span> fixed;\n  <span class=\"pl-c1\">top</span><span class=\"pl-kos\">:</span> <span class=\"pl-c1\">0</span>;\n  <span class=\"pl-c1\">width</span><span class=\"pl-kos\">:</span> <span class=\"pl-c1\">0<span class=\"pl-smi\">%</span></span>;\n  <span class=\"pl-c1\">height</span><span class=\"pl-kos\">:</span> <span class=\"pl-c1\">4<span class=\"pl-smi\">px</span></span>;\n  <span class=\"pl-c1\">background</span><span class=\"pl-kos\">:</span> <span class=\"pl-pds\"><span class=\"pl-kos\">#</span>7983ff</span>;\n  <span class=\"pl-c1\">z-index</span><span class=\"pl-kos\">:</span> <span class=\"pl-c1\">10000</span>;\n}</pre></div>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const scrollProgress = document.getElementById('scroll_progress_bar');\n// 滚动条高度\nconst height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n\nwindow.addEventListener('scroll', () =&gt; {\n  const scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n  // 当前进度条进度 = 当前滚动条位置 / 滚动条高度\n  scrollProgress.style.width = `${(scrollTop / height) * 100}%`;\n});\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">scrollProgress</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">document</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getElementById</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'scroll_progress_bar'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// 滚动条高度</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">height</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">document</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">documentElement</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">scrollHeight</span> <span class=\"pl-c1\">-</span> <span class=\"pl-smi\">document</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">documentElement</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">clientHeight</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-smi\">window</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">addEventListener</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'scroll'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">scrollTop</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">document</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">body</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">scrollTop</span> <span class=\"pl-c1\">||</span> <span class=\"pl-smi\">document</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">documentElement</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">scrollTop</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-c\">// 当前进度条进度 = 当前滚动条位置 / 滚动条高度</span>\n  <span class=\"pl-s1\">scrollProgress</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">style</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">width</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">scrollTop</span> <span class=\"pl-c1\">/</span> <span class=\"pl-s1\">height</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">*</span> <span class=\"pl-c1\">100</span><span class=\"pl-kos\">}</span></span>%`</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h2 dir=\"auto\">✍️ 实现</h2>\n<h3 dir=\"auto\">🔶 Vue3</h3>\n<div class=\"highlight highlight-text-html-vue notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;!-- ScrollProgress.vue --&gt;\n\n&lt;script setup lang=&quot;ts&quot;&gt;\nimport { ref, onMounted, onUnmounted } from 'vue'\n\n// 在 `&lt;script setup&gt;` 标签下要使用 `props`，则需要使用 `defineProps` 进行声明\nconst props = defineProps({\n  // 滚动容器 - 如果容器高度会发生变化，则需要对其进行监听，否则会滚动进度会出现计算误差\n  root: {\n    type: String,\n    default: '#app',\n    required: false,\n  },\n  // 滚动条的高度\n  height: {\n    type: String,\n    default: '4px',\n    required: false,\n  },\n  // 滚动条颜色\n  theme: {\n    type: String,\n    default: '#3eaf7c',\n    required: false,\n    validator: (v: string) =&gt; {\n      document.head.style.color = v\n      const q = document.head.style.color\n      document.head.style.color = ''\n      return !!q\n    },\n  },\n  // 滚动条放置的位置：顶部或底部\n  placement: {\n    type: String,\n    default: 'top',\n    required: false,\n    validator: (v: string) =&gt; {\n      if (!['top', 'bottom'].includes(v)) {\n        console.error(`[ScrollProgress(placement)] The value must match one of these strings: 'top' | 'bottom'`)\n        return false\n      }\n      return true\n    },\n  },\n  // 滚动条在页面中的层级\n  zIndex: {\n    type: [Number, String],\n    default: 10000,\n    required: false,\n    validator: (v: string) =&gt; /^-?[\\d]+$/.test(v),\n  },\n})\n\nconst el = ref(null)\nconst appHeight = ref(0)\n\n// 为了避免进度条因页面容器高度变化导致计算偏差，需要对页面容器进行监听，动态获取其高度\nonMounted(() =&gt; {\n  // 需要观察变动的节点\n  const targetNode = document.querySelector(props.root)\n  if (!targetNode) return console.error(`[ScrollProgress(root)] '${props.root}' is invalid`)\n  // 观察器的配置（需要观察什么变动）\n  const config = { attributes: true, childList: false, subtree: true }\n  // 创建一个观察器实例并传入当观察到变动时执行的回调函数\n  const observer = new MutationObserver((mutationsList: MutationRecord[]) =&gt; {\n    // Use traditional 'for loops' for IE 11\n    for(let mutation of mutationsList) {\n      if (mutation.type === 'attributes') {\n        appHeight.value = document.documentElement.scrollHeight\n      }\n    }\n  })\n  // 开始观察目标节点\n  observer.observe(targetNode, config)\n})\n\n// 滚动事件执行的回调函数\nconst listener = () =&gt; {\n  const scrollProgress = el.value\n  const height = appHeight.value - document.documentElement.clientHeight\n  const scrollTop = document.body.scrollTop || document.documentElement.scrollTop\n  scrollProgress.style.width = `${(scrollTop / height) * 100}%`\n}\n\nonMounted(() =&gt; window.addEventListener('scroll', listener))\nonUnmounted(() =&gt; window.removeEventListener('scroll', listener))\n\nconst style: any = {\n  background: props.theme,\n  zIndex: props.zIndex,\n  height: props.height,\n}\n\nif (props.placement === 'top') style.top = 0\nif (props.placement === 'bottom') style.bottom = 0\n\n// 在 `&lt;script setup&gt;` 标签下显式公开属性，则需要使用 `defineExpose`\ndefineExpose({ style })\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div id=&quot;scroll_progress&quot; ref=&quot;el&quot; :style=&quot;style&quot; /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n#scroll_progress {\n  position: fixed;\n  width: 0%;\n  transition: width 300ms ease-out;\n}\n&lt;/style&gt;\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">&lt;!--</span> ScrollProgress.vue <span class=\"pl-c\">--&gt;</span></span>\n\n<span class=\"pl-s1\">&lt;<span class=\"pl-ent\">script</span> <span class=\"pl-e\">setup</span> <span class=\"pl-e\">lang</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ts<span class=\"pl-pds\">\"</span></span>&gt;</span>\n<span class=\"pl-s1\"><span class=\"pl-k\">import</span> { <span class=\"pl-smi\">ref</span>, <span class=\"pl-smi\">onMounted</span>, <span class=\"pl-smi\">onUnmounted</span> } <span class=\"pl-k\">from</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>vue<span class=\"pl-pds\">'</span></span></span>\n<span class=\"pl-s1\"></span>\n<span class=\"pl-s1\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> 在 `&lt;script setup&gt;` 标签下要使用 `props`，则需要使用 `defineProps` 进行声明</span></span>\n<span class=\"pl-s1\"><span class=\"pl-k\"><span class=\"pl-k\">const</span></span> props <span class=\"pl-k\">=</span> <span class=\"pl-en\">defineProps</span>({</span>\n<span class=\"pl-s1\">  <span class=\"pl-c\"><span class=\"pl-c\">//</span> 滚动容器 - 如果容器高度会发生变化，则需要对其进行监听，否则会滚动进度会出现计算误差</span></span>\n<span class=\"pl-s1\">  root: {</span>\n<span class=\"pl-s1\">    type: <span class=\"pl-c1\">String</span>,</span>\n<span class=\"pl-s1\">    default: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#app<span class=\"pl-pds\">'</span></span>,</span>\n<span class=\"pl-s1\">    required: <span class=\"pl-c1\">false</span>,</span>\n<span class=\"pl-s1\">  },</span>\n<span class=\"pl-s1\">  <span class=\"pl-c\"><span class=\"pl-c\">//</span> 滚动条的高度</span></span>\n<span class=\"pl-s1\">  height: {</span>\n<span class=\"pl-s1\">    type: <span class=\"pl-c1\">String</span>,</span>\n<span class=\"pl-s1\">    default: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>4px<span class=\"pl-pds\">'</span></span>,</span>\n<span class=\"pl-s1\">    required: <span class=\"pl-c1\">false</span>,</span>\n<span class=\"pl-s1\">  },</span>\n<span class=\"pl-s1\">  <span class=\"pl-c\"><span class=\"pl-c\">//</span> 滚动条颜色</span></span>\n<span class=\"pl-s1\">  theme: {</span>\n<span class=\"pl-s1\">    type: <span class=\"pl-c1\">String</span>,</span>\n<span class=\"pl-s1\">    default: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#3eaf7c<span class=\"pl-pds\">'</span></span>,</span>\n<span class=\"pl-s1\">    required: <span class=\"pl-c1\">false</span>,</span>\n<span class=\"pl-s1\">    <span class=\"pl-en\">validator</span>: (<span class=\"pl-v\">v</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">string</span>) <span class=\"pl-k\">=&gt;</span> {</span>\n<span class=\"pl-s1\">      <span class=\"pl-c1\">document</span>.<span class=\"pl-smi\">head</span>.<span class=\"pl-c1\">style</span>.<span class=\"pl-c1\">color</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">v</span></span>\n<span class=\"pl-s1\">      <span class=\"pl-k\"><span class=\"pl-k\">const</span></span> q <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-smi\">head</span>.<span class=\"pl-c1\">style</span>.<span class=\"pl-c1\">color</span></span>\n<span class=\"pl-s1\">      <span class=\"pl-c1\">document</span>.<span class=\"pl-smi\">head</span>.<span class=\"pl-c1\">style</span>.<span class=\"pl-c1\">color</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span></span>\n<span class=\"pl-s1\">      <span class=\"pl-k\">return</span> <span class=\"pl-k\">!!</span><span class=\"pl-smi\">q</span></span>\n<span class=\"pl-s1\">    },</span>\n<span class=\"pl-s1\">  },</span>\n<span class=\"pl-s1\">  <span class=\"pl-c\"><span class=\"pl-c\">//</span> 滚动条放置的位置：顶部或底部</span></span>\n<span class=\"pl-s1\">  placement: {</span>\n<span class=\"pl-s1\">    type: <span class=\"pl-c1\">String</span>,</span>\n<span class=\"pl-s1\">    default: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>top<span class=\"pl-pds\">'</span></span>,</span>\n<span class=\"pl-s1\">    required: <span class=\"pl-c1\">false</span>,</span>\n<span class=\"pl-s1\">    <span class=\"pl-en\">validator</span>: (<span class=\"pl-v\">v</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">string</span>) <span class=\"pl-k\">=&gt;</span> {</span>\n<span class=\"pl-s1\">      <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>top<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>bottom<span class=\"pl-pds\">'</span></span>].<span class=\"pl-en\">includes</span>(<span class=\"pl-smi\">v</span>)) {</span>\n<span class=\"pl-s1\">        <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">error</span>(<span class=\"pl-s\">`</span><span class=\"pl-s\">[ScrollProgress(placement)] The value must match one of these strings: 'top' | 'bottom'</span><span class=\"pl-s\">`</span>)</span>\n<span class=\"pl-s1\">        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span></span>\n<span class=\"pl-s1\">      }</span>\n<span class=\"pl-s1\">      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span></span>\n<span class=\"pl-s1\">    },</span>\n<span class=\"pl-s1\">  },</span>\n<span class=\"pl-s1\">  <span class=\"pl-c\"><span class=\"pl-c\">//</span> 滚动条在页面中的层级</span></span>\n<span class=\"pl-s1\">  zIndex: {</span>\n<span class=\"pl-s1\">    type: [<span class=\"pl-c1\">Number</span>, <span class=\"pl-c1\">String</span>],</span>\n<span class=\"pl-s1\">    default: <span class=\"pl-c1\">10000</span>,</span>\n<span class=\"pl-s1\">    required: <span class=\"pl-c1\">false</span>,</span>\n<span class=\"pl-s1\">    <span class=\"pl-en\">validator</span>: (<span class=\"pl-v\">v</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">string</span>) <span class=\"pl-k\">=&gt;</span><span class=\"pl-sr\"> <span class=\"pl-pds\">/</span><span class=\"pl-k\">^</span>-<span class=\"pl-k\">?</span><span class=\"pl-c1\">[<span class=\"pl-c1\">\\d</span>]</span><span class=\"pl-k\">+</span><span class=\"pl-k\">$</span><span class=\"pl-pds\">/</span></span>.<span class=\"pl-c1\">test</span>(<span class=\"pl-smi\">v</span>),</span>\n<span class=\"pl-s1\">  },</span>\n<span class=\"pl-s1\">})</span>\n<span class=\"pl-s1\"></span>\n<span class=\"pl-s1\"><span class=\"pl-k\"><span class=\"pl-k\">const</span></span> el <span class=\"pl-k\">=</span> <span class=\"pl-en\">ref</span>(<span class=\"pl-c1\">null</span>)</span>\n<span class=\"pl-s1\"><span class=\"pl-k\"><span class=\"pl-k\">const</span></span> appHeight <span class=\"pl-k\">=</span> <span class=\"pl-en\">ref</span>(<span class=\"pl-c1\">0</span>)</span>\n<span class=\"pl-s1\"></span>\n<span class=\"pl-s1\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> 为了避免进度条因页面容器高度变化导致计算偏差，需要对页面容器进行监听，动态获取其高度</span></span>\n<span class=\"pl-s1\"><span class=\"pl-en\">onMounted</span>(() <span class=\"pl-k\">=&gt;</span> {</span>\n<span class=\"pl-s1\">  <span class=\"pl-c\"><span class=\"pl-c\">//</span> 需要观察变动的节点</span></span>\n<span class=\"pl-s1\">  <span class=\"pl-k\"><span class=\"pl-k\">const</span></span> targetNode <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">querySelector</span>(<span class=\"pl-smi\">props</span>.<span class=\"pl-smi\">root</span>)</span>\n<span class=\"pl-s1\">  <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span><span class=\"pl-smi\">targetNode</span>) <span class=\"pl-k\">return</span> <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">error</span>(<span class=\"pl-s\">`</span><span class=\"pl-s\">[ScrollProgress(root)] '${<span class=\"pl-smi\">props</span>.<span class=\"pl-smi\">root</span>}' is invalid</span><span class=\"pl-s\">`</span>)</span>\n<span class=\"pl-s1\">  <span class=\"pl-c\"><span class=\"pl-c\">//</span> 观察器的配置（需要观察什么变动）</span></span>\n<span class=\"pl-s1\">  <span class=\"pl-k\"><span class=\"pl-k\">const</span></span> config <span class=\"pl-k\">=</span> { attributes: <span class=\"pl-c1\">true</span>, childList: <span class=\"pl-c1\">false</span>, subtree: <span class=\"pl-c1\">true</span> }</span>\n<span class=\"pl-s1\">  <span class=\"pl-c\"><span class=\"pl-c\">//</span> 创建一个观察器实例并传入当观察到变动时执行的回调函数</span></span>\n<span class=\"pl-s1\">  <span class=\"pl-k\"><span class=\"pl-k\">const</span></span> observer <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-c1\">MutationObserver</span>((<span class=\"pl-v\">mutationsList</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">MutationRecord</span>[]) <span class=\"pl-k\">=&gt;</span> {</span>\n<span class=\"pl-s1\">    <span class=\"pl-c\"><span class=\"pl-c\">//</span> Use traditional 'for loops' for IE 11</span></span>\n<span class=\"pl-s1\">    <span class=\"pl-k\">for</span>(<span class=\"pl-k\">let</span> mutation <span class=\"pl-k\">of</span> <span class=\"pl-smi\">mutationsList</span>) {</span>\n<span class=\"pl-s1\">      <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">mutation</span>.<span class=\"pl-c1\">type</span> <span class=\"pl-k\">===</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>attributes<span class=\"pl-pds\">'</span></span>) {</span>\n<span class=\"pl-s1\">        <span class=\"pl-smi\">appHeight</span>.<span class=\"pl-c1\">value</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">documentElement</span>.<span class=\"pl-smi\">scrollHeight</span></span>\n<span class=\"pl-s1\">      }</span>\n<span class=\"pl-s1\">    }</span>\n<span class=\"pl-s1\">  })</span>\n<span class=\"pl-s1\">  <span class=\"pl-c\"><span class=\"pl-c\">//</span> 开始观察目标节点</span></span>\n<span class=\"pl-s1\">  <span class=\"pl-smi\">observer</span>.<span class=\"pl-c1\">observe</span>(<span class=\"pl-smi\">targetNode</span>, <span class=\"pl-smi\">config</span>)</span>\n<span class=\"pl-s1\">})</span>\n<span class=\"pl-s1\"></span>\n<span class=\"pl-s1\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> 滚动事件执行的回调函数</span></span>\n<span class=\"pl-s1\"><span class=\"pl-k\"><span class=\"pl-k\">const</span></span> listener <span class=\"pl-k\">=</span> () <span class=\"pl-k\">=&gt;</span> {</span>\n<span class=\"pl-s1\">  <span class=\"pl-k\"><span class=\"pl-k\">const</span></span> scrollProgress <span class=\"pl-k\">=</span> <span class=\"pl-smi\">el</span>.<span class=\"pl-c1\">value</span></span>\n<span class=\"pl-s1\">  <span class=\"pl-k\"><span class=\"pl-k\">const</span></span> height <span class=\"pl-k\">=</span> <span class=\"pl-smi\">appHeight</span>.<span class=\"pl-c1\">value</span> <span class=\"pl-k\">-</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">documentElement</span>.<span class=\"pl-smi\">clientHeight</span></span>\n<span class=\"pl-s1\">  <span class=\"pl-k\"><span class=\"pl-k\">const</span></span> scrollTop <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">body</span>.<span class=\"pl-smi\">scrollTop</span> <span class=\"pl-k\">||</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">documentElement</span>.<span class=\"pl-smi\">scrollTop</span></span>\n<span class=\"pl-s1\">  <span class=\"pl-smi\">scrollProgress</span>.<span class=\"pl-c1\">style</span>.<span class=\"pl-c1\">width</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\">`</span><span class=\"pl-s\">${(<span class=\"pl-smi\">scrollTop</span> <span class=\"pl-k\">/</span> <span class=\"pl-smi\">height</span>) <span class=\"pl-k\">*</span> <span class=\"pl-c1\">100</span>}%</span><span class=\"pl-s\">`</span></span>\n<span class=\"pl-s1\">}</span>\n<span class=\"pl-s1\"></span>\n<span class=\"pl-s1\"><span class=\"pl-en\">onMounted</span>(() <span class=\"pl-k\">=&gt;</span> <span class=\"pl-c1\">window</span>.<span class=\"pl-c1\">addEventListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>scroll<span class=\"pl-pds\">'</span></span>, <span class=\"pl-smi\">listener</span>))</span>\n<span class=\"pl-s1\"><span class=\"pl-en\">onUnmounted</span>(() <span class=\"pl-k\">=&gt;</span> <span class=\"pl-c1\">window</span>.<span class=\"pl-c1\">removeEventListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>scroll<span class=\"pl-pds\">'</span></span>, <span class=\"pl-smi\">listener</span>))</span>\n<span class=\"pl-s1\"></span>\n<span class=\"pl-s1\"><span class=\"pl-k\"><span class=\"pl-k\">const</span></span> style<span class=\"pl-k\">:</span> <span class=\"pl-c1\">any</span> <span class=\"pl-k\">=</span> {</span>\n<span class=\"pl-s1\">  background: <span class=\"pl-smi\">props</span>.<span class=\"pl-smi\">theme</span>,</span>\n<span class=\"pl-s1\">  zIndex: <span class=\"pl-smi\">props</span>.<span class=\"pl-c1\">zIndex</span>,</span>\n<span class=\"pl-s1\">  height: <span class=\"pl-smi\">props</span>.<span class=\"pl-c1\">height</span>,</span>\n<span class=\"pl-s1\">}</span>\n<span class=\"pl-s1\"></span>\n<span class=\"pl-s1\"><span class=\"pl-k\">if</span> (<span class=\"pl-smi\">props</span>.<span class=\"pl-smi\">placement</span> <span class=\"pl-k\">===</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>top<span class=\"pl-pds\">'</span></span>) <span class=\"pl-smi\">style</span>.<span class=\"pl-c1\">top</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span></span>\n<span class=\"pl-s1\"><span class=\"pl-k\">if</span> (<span class=\"pl-smi\">props</span>.<span class=\"pl-smi\">placement</span> <span class=\"pl-k\">===</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>bottom<span class=\"pl-pds\">'</span></span>) <span class=\"pl-smi\">style</span>.<span class=\"pl-c1\">bottom</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span></span>\n<span class=\"pl-s1\"></span>\n<span class=\"pl-s1\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> 在 `&lt;script setup&gt;` 标签下显式公开属性，则需要使用 `defineExpose`</span></span>\n<span class=\"pl-s1\"><span class=\"pl-en\">defineExpose</span>({ <span class=\"pl-smi\">style</span> })</span>\n<span class=\"pl-s1\">&lt;/<span class=\"pl-ent\">script</span>&gt;</span>\n\n&lt;<span class=\"pl-ent\">template</span>&gt;\n  &lt;<span class=\"pl-ent\">div</span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>scroll_progress<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">ref</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>el<span class=\"pl-pds\">\"</span></span> :<span class=\"pl-e\">style</span>=<span class=\"pl-s1\"><span class=\"pl-pds\">\"</span>style<span class=\"pl-pds\">\"</span></span> /&gt;\n&lt;/<span class=\"pl-ent\">template</span>&gt;\n\n<span class=\"pl-s1\">&lt;<span class=\"pl-ent\">style</span> <span class=\"pl-e\">scoped</span>&gt;</span>\n<span class=\"pl-s1\"><span class=\"pl-e\">#scroll_progress</span> {</span>\n<span class=\"pl-s1\">  <span class=\"pl-c1\"><span class=\"pl-c1\">position</span></span>: <span class=\"pl-c1\">fixed</span>;</span>\n<span class=\"pl-s1\">  <span class=\"pl-c1\"><span class=\"pl-c1\">width</span></span>: <span class=\"pl-c1\">0<span class=\"pl-k\">%</span></span>;</span>\n<span class=\"pl-s1\">  <span class=\"pl-c1\"><span class=\"pl-c1\">transition</span></span>: width <span class=\"pl-c1\">300<span class=\"pl-k\">ms</span></span> <span class=\"pl-c1\">ease-out</span>;</span>\n<span class=\"pl-s1\">}</span>\n<span class=\"pl-s1\">&lt;/<span class=\"pl-ent\">style</span>&gt;</span></pre></div>\n<h2 dir=\"auto\">🎥 演示</h2>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16164244/133965898-4994f377-68de-4c6c-8d19-d00a61625c06.gif\"><img src=\"https://user-images.githubusercontent.com/16164244/133965898-4994f377-68de-4c6c-8d19-d00a61625c06.gif\" alt=\"scroll_progress_bar\" data-animated-image=\"\" style=\"max-width: 100%;\"></a></p>\n<hr>\n<h2 dir=\"auto\">🔗 参考</h2>\n<ul dir=\"auto\">\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Document/scroll_event\" rel=\"nofollow\">[MDN] Document: scroll event</a> - 文档视图或者一个元素在滚动时，会触发元素的scroll事件。</li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver\" rel=\"nofollow\">[MDN] MutationObserver</a> - 接口提供了监视对 <code class=\"notranslate\">DOM树</code> 所做更改的能力。它被设计为旧的 <code class=\"notranslate\">Mutation Events</code> 功能的替代品，该功能是 <code class=\"notranslate\">DOM3 Events</code> 规范的一部分。</li>\n<li><a href=\"https://v3.vuejs.org/\" rel=\"nofollow\">Vue3 API</a>\n<ul dir=\"auto\">\n<li><a href=\"https://v3.vuejs.org/api/options-data.html#props\" rel=\"nofollow\">props</a></li>\n<li><a href=\"https://v3.vuejs.org/api/sfc-script-setup.html#basic-syntax\" rel=\"nofollow\">&lt;script setup&gt;</a></li>\n<li><a href=\"https://v3.vuejs.org/api/composition-api.html#lifecycle-hooks\" rel=\"nofollow\">Lifecycle Hooks</a></li>\n<li><a href=\"https://v3.vuejs.org/api/sfc-script-setup.html#defineprops-and-defineemits\" rel=\"nofollow\">defineProps and defineEmits</a></li>\n<li><a href=\"https://v3.vuejs.org/api/sfc-script-setup.html#defineexpose\" rel=\"nofollow\">defineExpose</a></li>\n</ul>\n</li>\n</ul>","category":{"name":"Notes"},"labels":{"edges":[{"node":{"id":"MDU6TGFiZWwzMDUyMDQ4NTAz","name":"vue"}},{"node":{"id":"MDU6TGFiZWwzMDg2MDYxNzMz","name":"blog"}},{"node":{"id":"MDU6TGFiZWwzMTk2OTc2MDIx","name":"wechat-post"}}]},"reactions":{"totalCount":0,"edges":[]},"comments":{"edges":[]}}